{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import config from\"../config\";import\"./ChatBox.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatBox(){const[messages,setMessages]=useState([]);const[query,setQuery]=useState(\"\");const[loading,setLoading]=useState(false);// Add first welcome message\nuseEffect(()=>{setMessages([{text:\"ðŸ¤– Hello! I'm SMG-EV Assistant. How can I help you today?\",sender:\"bot\"}]);},[]);const askBot=async()=>{setLoading(true);if(!query.trim())return;const userMessage={text:query,sender:\"user\"};setMessages(prev=>[...prev,userMessage]);try{setQuery(\"\");const res=await fetch(`${config.API_URL}/ask`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({query})});const data=await res.json();console.log(\"data\",data);const botMessage={text:data.response,sender:\"bot\"};setMessages(prev=>[...prev,botMessage]);}catch(error){setMessages(prev=>[...prev,{text:\"Sorry, something went wrong.\",sender:\"bot\"}]);}finally{setLoading(false);}};const handleKeyPress=event=>{if(event.key===\"Enter\"&&!event.shiftKey){event.preventDefault();askBot();}else if(event.key===\"Enter\"&&event.shiftKey){setQuery(prev=>prev+\"\\n\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:\"\\uD83E\\uDD16 SMG-EV Assistant\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:`message ${msg.sender}`,children:msg.text},index)),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"message bot\",children:\"Typing...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:query,onChange:e=>setQuery(e.target.value),onKeyDown:handleKeyPress,placeholder:\"Type your message...\",rows:\"2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:askBot,children:\"Send\"})]})]});}export default ChatBox;","map":{"version":3,"names":["React","useState","useEffect","config","jsx","_jsx","jsxs","_jsxs","ChatBox","messages","setMessages","query","setQuery","loading","setLoading","text","sender","askBot","trim","userMessage","prev","res","fetch","API_URL","method","headers","body","JSON","stringify","data","json","console","log","botMessage","response","error","handleKeyPress","event","key","shiftKey","preventDefault","className","children","map","msg","index","value","onChange","e","target","onKeyDown","placeholder","rows","onClick"],"sources":["C:/Users/HP VICTUS/OneDrive/Desktop/chatbot_smg_ev_assistant/frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport config from \"../config\";\r\nimport \"./ChatBox.css\";\r\n\r\nfunction ChatBox() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add first welcome message\r\n  useEffect(() => {\r\n    setMessages([{ text: \"ðŸ¤– Hello! I'm SMG-EV Assistant. How can I help you today?\", sender: \"bot\" }]);\r\n  }, []);\r\n\r\n  const askBot = async () => {\r\n    setLoading(true);\r\n    if (!query.trim()) return;\r\n\r\n    const userMessage = { text: query, sender: \"user\" };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    try {\r\n      setQuery(\"\");\r\n      const res = await fetch(`${config.API_URL}/ask`, {\r\n        method: \"POST\",\r\n        headers: {\r\n           \"Content-Type\": \"application/json\",   \r\n          },\r\n        body: JSON.stringify({ query }),\r\n      });\r\n      const data = await res.json();\r\n      console.log(\"data\" ,data);\r\n      const botMessage = { text: data.response, sender: \"bot\" };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { text: \"Sorry, something went wrong.\", sender: \"bot\" },\r\n      ]);\r\n    }finally{\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\" && !event.shiftKey) {\r\n      event.preventDefault();\r\n      askBot();\r\n    } else if (event.key === \"Enter\" && event.shiftKey) {\r\n      setQuery((prev) => prev + \"\\n\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">ðŸ¤– SMG-EV Assistant</div>\r\n\r\n      <div className=\"chat-box\">\r\n  {messages.map((msg, index) => (\r\n    <div key={index} className={`message ${msg.sender}`}>\r\n      {msg.text}\r\n    </div>\r\n  ))}\r\n  {loading && (\r\n    <div className=\"message bot\">\r\n      Typing...\r\n    </div>\r\n  )}\r\n</div>\r\n\r\n\r\n      <div className=\"chat-input\">\r\n        <textarea\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          onKeyDown={handleKeyPress}\r\n          placeholder=\"Type your message...\"\r\n          rows=\"2\"\r\n        />\r\n        <button onClick={askBot}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,QAAS,CAAAC,OAAOA,CAAA,CAAG,CACjB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAE7C;AACAC,SAAS,CAAC,IAAM,CACdQ,WAAW,CAAC,CAAC,CAAEK,IAAI,CAAE,2DAA2D,CAAEC,MAAM,CAAE,KAAM,CAAC,CAAC,CAAC,CACrG,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzBH,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CAACH,KAAK,CAACO,IAAI,CAAC,CAAC,CAAE,OAEnB,KAAM,CAAAC,WAAW,CAAG,CAAEJ,IAAI,CAAEJ,KAAK,CAAEK,MAAM,CAAE,MAAO,CAAC,CACnDN,WAAW,CAAEU,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAED,WAAW,CAAC,CAAC,CAE7C,GAAI,CACFP,QAAQ,CAAC,EAAE,CAAC,CACZ,KAAM,CAAAS,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGnB,MAAM,CAACoB,OAAO,MAAM,CAAE,CAC/CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACN,cAAc,CAAE,kBACjB,CAAC,CACHC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEjB,KAAM,CAAC,CAChC,CAAC,CAAC,CACF,KAAM,CAAAkB,IAAI,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,CAAC,CAC7BC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEH,IAAI,CAAC,CACzB,KAAM,CAAAI,UAAU,CAAG,CAAElB,IAAI,CAAEc,IAAI,CAACK,QAAQ,CAAElB,MAAM,CAAE,KAAM,CAAC,CACzDN,WAAW,CAAEU,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAEa,UAAU,CAAC,CAAC,CAC9C,CAAE,MAAOE,KAAK,CAAE,CACdzB,WAAW,CAAEU,IAAI,EAAK,CACpB,GAAGA,IAAI,CACP,CAAEL,IAAI,CAAE,8BAA8B,CAAEC,MAAM,CAAE,KAAM,CAAC,CACxD,CAAC,CACJ,CAAC,OAAO,CACNF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAsB,cAAc,CAAIC,KAAK,EAAK,CAChC,GAAIA,KAAK,CAACC,GAAG,GAAK,OAAO,EAAI,CAACD,KAAK,CAACE,QAAQ,CAAE,CAC5CF,KAAK,CAACG,cAAc,CAAC,CAAC,CACtBvB,MAAM,CAAC,CAAC,CACV,CAAC,IAAM,IAAIoB,KAAK,CAACC,GAAG,GAAK,OAAO,EAAID,KAAK,CAACE,QAAQ,CAAE,CAClD3B,QAAQ,CAAEQ,IAAI,EAAKA,IAAI,CAAG,IAAI,CAAC,CACjC,CACF,CAAC,CAED,mBACEb,KAAA,QAAKkC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BrC,IAAA,QAAKoC,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,+BAAmB,CAAK,CAAC,cAEtDnC,KAAA,QAAKkC,SAAS,CAAC,UAAU,CAAAC,QAAA,EAC5BjC,QAAQ,CAACkC,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACvBxC,IAAA,QAAiBoC,SAAS,CAAE,WAAWG,GAAG,CAAC5B,MAAM,EAAG,CAAA0B,QAAA,CACjDE,GAAG,CAAC7B,IAAI,EADD8B,KAEL,CACN,CAAC,CACDhC,OAAO,eACNR,IAAA,QAAKoC,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,WAE7B,CAAK,CACN,EACE,CAAC,cAGAnC,KAAA,QAAKkC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBrC,IAAA,aACEyC,KAAK,CAAEnC,KAAM,CACboC,QAAQ,CAAGC,CAAC,EAAKpC,QAAQ,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC1CI,SAAS,CAAEd,cAAe,CAC1Be,WAAW,CAAC,sBAAsB,CAClCC,IAAI,CAAC,GAAG,CACT,CAAC,cACF/C,IAAA,WAAQgD,OAAO,CAAEpC,MAAO,CAAAyB,QAAA,CAAC,MAAI,CAAQ,CAAC,EACnC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAlC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}