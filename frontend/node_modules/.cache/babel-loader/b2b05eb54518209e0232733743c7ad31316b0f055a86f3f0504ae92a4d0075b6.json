{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\delll\\\\OneDrive\\\\Documents\\\\smg\\\\frontend\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport config from \"../config\";\nimport \"./ChatBox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  // Load chat history from local storage\n  useEffect(() => {\n    const savedMessages = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\n    setMessages(savedMessages);\n  }, []);\n\n  // Save chat history to local storage\n  useEffect(() => {\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\n  }, [messages]);\n  const askBot = async () => {\n    if (!query.trim()) return;\n    const userMessage = {\n      text: query,\n      sender: \"user\",\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const res = await fetch(`${config.API_URL}/ask`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query\n      })\n    });\n    const data = await res.json();\n    const botMessage = {\n      text: data.response,\n      sender: \"bot\",\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, botMessage]);\n    setQuery(\"\"); // Clear input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), messages.map((msg, index) => msg.sender === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-item\",\n        onClick: () => setQuery(msg.text),\n        children: [msg.text, \" - \", /*#__PURE__*/_jsxDEV(\"small\", {\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 28\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [msg.text, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"timestamp\",\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        onKeyDown: event => event.key === \"Enter\" && !event.shiftKey && (event.preventDefault(), askBot()),\n        placeholder: \"Type your message...\",\n        rows: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: askBot,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"uOFzfJmOTYQBv5T+PPWgnyfAmm4=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","config","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","query","setQuery","savedMessages","JSON","parse","localStorage","getItem","setItem","stringify","askBot","trim","userMessage","text","sender","timestamp","Date","toLocaleTimeString","prev","res","fetch","API_URL","method","headers","body","data","json","botMessage","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","value","onChange","e","target","onKeyDown","event","key","shiftKey","preventDefault","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/delll/OneDrive/Documents/smg/frontend/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport config from \"../config\"; \r\nimport \"./ChatBox.css\"; \r\n\r\nfunction ChatBox() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  // Load chat history from local storage\r\n  useEffect(() => {\r\n    const savedMessages = JSON.parse(localStorage.getItem(\"chatHistory\")) || [];\r\n    setMessages(savedMessages);\r\n  }, []);\r\n\r\n  // Save chat history to local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"chatHistory\", JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  const askBot = async () => {\r\n    if (!query.trim()) return;\r\n\r\n    const userMessage = { text: query, sender: \"user\", timestamp: new Date().toLocaleTimeString() };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    const res = await fetch(`${config.API_URL}/ask`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query }),\r\n    });\r\n    const data = await res.json();\r\n\r\n    const botMessage = { text: data.response, sender: \"bot\", timestamp: new Date().toLocaleTimeString() };\r\n    setMessages((prev) => [...prev, botMessage]);\r\n    setQuery(\"\"); // Clear input field\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Sidebar for Chat History */}\r\n      <div className=\"chat-sidebar\">\r\n        <h3>Chat History</h3>\r\n        {messages.map((msg, index) => (\r\n          msg.sender === \"user\" && (\r\n            <div key={index} className=\"history-item\" onClick={() => setQuery(msg.text)}>\r\n              {msg.text} - <small>{msg.timestamp}</small>\r\n            </div>\r\n          )\r\n        ))}\r\n      </div>\r\n\r\n      {/* Main Chat Section */}\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text} <small className=\"timestamp\">{msg.timestamp}</small>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Input Section */}\r\n      <div className=\"chat-input\">\r\n        <textarea\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          onKeyDown={(event) => event.key === \"Enter\" && !event.shiftKey && (event.preventDefault(), askBot())}\r\n          placeholder=\"Type your message...\"\r\n          rows=\"2\"\r\n        />\r\n        <button onClick={askBot}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}